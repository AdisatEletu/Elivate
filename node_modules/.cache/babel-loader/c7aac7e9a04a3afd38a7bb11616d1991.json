{"ast":null,"code":"var _jsxFileName = \"/Users/softcom/Documents/Elivate/src/layouts/AuthRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ErrorBoundary from '../components/ErrorBoundary';\n\nconst AuthRoute = ({\n  component: Component,\n  auth,\n  ...rest\n}) => {\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => {\n      // if user is authenticated, redirect to homepage\n      if (auth.isAuthenticated) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 18\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(\"main\", {\n          className: \"container\",\n          id: \"auth-route-layout\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(ErrorBoundary, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 17\n          }\n        }))));\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }));\n};\n\nAuthRoute.propTypes = {\n  component: propTypes.object.isRequired,\n  auth: propTypes.shape({\n    isAuthenticated: propTypes.bool.isRequired\n  })\n};\n\nconst mapStateToProps = ({\n  auth\n}) => ({\n  auth\n});\n\nexport default connect(mapStateToProps)(AuthRoute);","map":{"version":3,"sources":["/Users/softcom/Documents/Elivate/src/layouts/AuthRoute.js"],"names":["React","Route","Redirect","propTypes","connect","ErrorBoundary","AuthRoute","component","Component","auth","rest","props","isAuthenticated","object","isRequired","shape","bool","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,IAAxB;AAA8B,KAAGC;AAAjC,CAAD,KAA6C;AAC7D,sBACE,oBAAC,KAAD,oBACMA,IADN;AAEE,IAAA,MAAM,EAAEC,KAAK,IAAI;AACf;AACA,UAAIF,IAAI,CAACG,eAAT,EAA0B;AACxB,4BAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFD,MAEO;AACL,4BACE;AAAM,UAAA,SAAS,EAAC,WAAhB;AAA4B,UAAA,EAAE,EAAC,mBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,SAAD,oBAAeD,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,CADF,CADF;AAOD;AACF,KAfH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAmBD,CApBD;;AAsBAL,SAAS,CAACH,SAAV,GAAsB;AACpBI,EAAAA,SAAS,EAAEJ,SAAS,CAACU,MAAV,CAAiBC,UADR;AAEpBL,EAAAA,IAAI,EAAEN,SAAS,CAACY,KAAV,CAAgB;AACpBH,IAAAA,eAAe,EAAET,SAAS,CAACa,IAAV,CAAeF;AADZ,GAAhB;AAFc,CAAtB;;AAOA,MAAMG,eAAe,GAAG,CAAC;AAAER,EAAAA;AAAF,CAAD,MAAe;AACrCA,EAAAA;AADqC,CAAf,CAAxB;;AAIA,eAAeL,OAAO,CAACa,eAAD,CAAP,CAAyBX,SAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ErrorBoundary from '../components/ErrorBoundary';\n\nconst AuthRoute = ({ component: Component, auth, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        // if user is authenticated, redirect to homepage\n        if (auth.isAuthenticated) {\n          return <Redirect to=\"/\" />;\n        } else {\n          return (\n            <main className=\"container\" id=\"auth-route-layout\">\n              <ErrorBoundary>\n                <Component {...props} />\n              </ErrorBoundary>\n            </main>\n          );\n        }\n      }}\n    />\n  );\n};\n\nAuthRoute.propTypes = {\n  component: propTypes.object.isRequired,\n  auth: propTypes.shape({\n    isAuthenticated: propTypes.bool.isRequired,\n  }),\n};\n\nconst mapStateToProps = ({ auth }) => ({\n  auth,\n});\n\nexport default connect(mapStateToProps)(AuthRoute);\n"]},"metadata":{},"sourceType":"module"}