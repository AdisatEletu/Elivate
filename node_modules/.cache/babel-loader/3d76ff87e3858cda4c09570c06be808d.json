{"ast":null,"code":"var _jsxFileName = \"/Users/softcom/Documents/Elivate/src/components/ErrorBoundary.js\";\nimport React, { Component } from 'react';\nimport propTypes from 'prop-types';\n\nclass ErrorBoundary extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      hasError: false,\n      error: ''\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    return {\n      hasError: true,\n      error\n    };\n  }\n\n  componentDidCatch(error, info) {\n    // You can also log the error to an error reporting service\n    // eslint-disable-next-line no-console\n    console.log({\n      error,\n      info\n    });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }\n      }, \"Something went wrong. Unable to render this part.\"));\n    }\n\n    return this.props.children;\n  }\n\n}\n\nErrorBoundary.propTypes = {\n  children: propTypes.oneOfType([propTypes.object, propTypes.array]).isRequired\n};\nexport default ErrorBoundary;","map":{"version":3,"sources":["/Users/softcom/Documents/Elivate/src/components/ErrorBoundary.js"],"names":["React","Component","propTypes","ErrorBoundary","state","hasError","error","getDerivedStateFromError","componentDidCatch","info","console","log","render","props","children","oneOfType","object","array","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,aAAN,SAA4BF,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACpCG,KADoC,GAC5B;AAAEC,MAAAA,QAAQ,EAAE,KAAZ;AAAmBC,MAAAA,KAAK,EAAE;AAA1B,KAD4B;AAAA;;AAGL,SAAxBC,wBAAwB,CAACD,KAAD,EAAQ;AACrC,WAAO;AAAED,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA;AAAlB,KAAP;AACD;;AAEDE,EAAAA,iBAAiB,CAACF,KAAD,EAAQG,IAAR,EAAc;AAC7B;AACA;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEL,MAAAA,KAAF;AAASG,MAAAA;AAAT,KAAZ;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKR,KAAL,CAAWC,QAAf,EAAyB;AACvB,0BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DADF,CADF;AAKD;;AACD,WAAO,KAAKQ,KAAL,CAAWC,QAAlB;AACD;;AAtBmC;;AAyBtCX,aAAa,CAACD,SAAd,GAA0B;AACxBY,EAAAA,QAAQ,EAAEZ,SAAS,CAACa,SAAV,CAAoB,CAC5Bb,SAAS,CAACc,MADkB,EAE5Bd,SAAS,CAACe,KAFkB,CAApB,EAGPC;AAJqB,CAA1B;AAOA,eAAef,aAAf","sourcesContent":["import React, { Component } from 'react';\nimport propTypes from 'prop-types';\n\nclass ErrorBoundary extends Component {\n  state = { hasError: false, error: '' };\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true, error };\n  }\n\n  componentDidCatch(error, info) {\n    // You can also log the error to an error reporting service\n    // eslint-disable-next-line no-console\n    console.log({ error, info });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div className=\"container\">\n          <h3>Something went wrong. Unable to render this part.</h3>\n        </div>\n      );\n    }\n    return this.props.children;\n  }\n}\n\nErrorBoundary.propTypes = {\n  children: propTypes.oneOfType([\n    propTypes.object,\n    propTypes.array\n  ]).isRequired,\n};\n\nexport default ErrorBoundary;\n"]},"metadata":{},"sourceType":"module"}