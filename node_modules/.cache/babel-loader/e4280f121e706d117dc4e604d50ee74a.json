{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from './reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nconst logger = createLogger();\nconst middlewares = [logger, thunk];\nconst initialState = {};\nconst devTools = // eslint-disable-next-line no-undef\nprocess.env.NODE_ENV === 'production' ? applyMiddleware(...middlewares) : composeWithDevTools(applyMiddleware(...middlewares));\nconst store = createStore(rootReducer, initialState, devTools);\nexport default store;","map":{"version":3,"sources":["/Users/softcom/Documents/react-redux-base/src/redux/store.js"],"names":["createStore","applyMiddleware","thunk","createLogger","rootReducer","composeWithDevTools","logger","middlewares","initialState","devTools","process","env","NODE_ENV","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAOC,WAAP,MAAwB,YAAxB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,MAAMC,MAAM,GAAGH,YAAY,EAA3B;AACA,MAAMI,WAAW,GAAG,CAACD,MAAD,EAASJ,KAAT,CAApB;AAEA,MAAMM,YAAY,GAAG,EAArB;AAEA,MAAMC,QAAQ,GACZ;AACAC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GACIX,eAAe,CAAC,GAAGM,WAAJ,CADnB,GAEIF,mBAAmB,CAACJ,eAAe,CAAC,GAAGM,WAAJ,CAAhB,CAJzB;AAMA,MAAMM,KAAK,GAAGb,WAAW,CAACI,WAAD,EAAcI,YAAd,EAA4BC,QAA5B,CAAzB;AAEA,eAAeI,KAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from './reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst logger = createLogger();\nconst middlewares = [logger, thunk];\n\nconst initialState = {};\n\nconst devTools =\n  // eslint-disable-next-line no-undef\n  process.env.NODE_ENV === 'production'\n    ? applyMiddleware(...middlewares)\n    : composeWithDevTools(applyMiddleware(...middlewares));\n\nconst store = createStore(rootReducer, initialState, devTools);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}