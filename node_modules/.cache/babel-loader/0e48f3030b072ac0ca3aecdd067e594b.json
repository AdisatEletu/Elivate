{"ast":null,"code":"var _jsxFileName = \"/Users/softcom/Documents/Elivate/src/layouts/PrivateRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ErrorBoundary from '../components/ErrorBoundary';\nimport Header from './Header';\n\nconst PrivateRoute = ({\n  component: Component,\n  auth,\n  ...rest\n}) => {\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => {\n      if (auth.isAuthenticated) {\n        return /*#__PURE__*/React.createElement(ErrorBoundary, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Header, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(\"main\", {\n          className: \"container\",\n          id: \"private-route-layout\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 17\n          }\n        }))));\n      } else {\n        //enable this line below to make route protected\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/login\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 18\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }));\n};\n\nPrivateRoute.propTypes = {\n  auth: propTypes.shape({\n    isAuthenticated: propTypes.bool.isRequired\n  }),\n  component: propTypes.func.isRequired\n};\n\nconst mapStateToProps = ({\n  auth\n}) => ({\n  auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","map":{"version":3,"sources":["/Users/softcom/Documents/Elivate/src/layouts/PrivateRoute.js"],"names":["React","Route","Redirect","propTypes","connect","ErrorBoundary","Header","PrivateRoute","component","Component","auth","rest","props","isAuthenticated","shape","bool","isRequired","func","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,IAAxB;AAA8B,KAAGC;AAAjC,CAAD,KAA6C;AAChE,sBACE,oBAAC,KAAD,oBACMA,IADN;AAEE,IAAA,MAAM,EAAEC,KAAK,IAAI;AACf,UAAIF,IAAI,CAACG,eAAT,EAA0B;AACxB,4BACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAGE;AAAM,UAAA,SAAS,EAAC,WAAhB;AAA4B,UAAA,EAAE,EAAC,sBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,SAAD,oBAAeD,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,CAHF,CADF;AASD,OAVD,MAUO;AACL;AACA,4BAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AACF,KAjBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAqBD,CAtBD;;AAwBAL,YAAY,CAACJ,SAAb,GAAyB;AACvBO,EAAAA,IAAI,EAAEP,SAAS,CAACW,KAAV,CAAgB;AACpBD,IAAAA,eAAe,EAAEV,SAAS,CAACY,IAAV,CAAeC;AADZ,GAAhB,CADiB;AAIvBR,EAAAA,SAAS,EAAEL,SAAS,CAACc,IAAV,CAAeD;AAJH,CAAzB;;AAOA,MAAME,eAAe,GAAG,CAAC;AAAER,EAAAA;AAAF,CAAD,MAAe;AACrCA,EAAAA;AADqC,CAAf,CAAxB;;AAIA,eAAeN,OAAO,CAACc,eAAD,CAAP,CAAyBX,YAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ErrorBoundary from '../components/ErrorBoundary';\nimport Header from './Header';\n\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        if (auth.isAuthenticated) {\n          return (\n            <ErrorBoundary>\n              <Header />\n              {/* <SideNav /> */}\n              <main className=\"container\" id=\"private-route-layout\">\n                <Component {...props} />\n              </main>\n            </ErrorBoundary>\n          );\n        } else {\n          //enable this line below to make route protected\n          return <Redirect to=\"/login\" />;\n        }\n      }}\n    />\n  );\n};\n\nPrivateRoute.propTypes = {\n  auth: propTypes.shape({\n    isAuthenticated: propTypes.bool.isRequired,\n  }),\n  component: propTypes.func.isRequired,\n};\n\nconst mapStateToProps = ({ auth }) => ({\n  auth,\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n"]},"metadata":{},"sourceType":"module"}